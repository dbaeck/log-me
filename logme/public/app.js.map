{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"app.js","sourcesContent":["Vue.config.debug = true;\n\nfunction findTags(str)\n{\n    if(!str || str.length == 0)\n        return [];\n    var re = /(#[a-z0-9][a-z0-9\\-_]*)/ig;\n    return str.match(re);\n}\n\nfunction findProjects(str)\n{\n    if(!str || str.length == 0)\n        return [];\n    var re = /(@[a-z0-9][a-z0-9\\-_]*)/ig;\n    return str.match(re);\n}\n\nfunction startLoading(el)\n{\n    el.html('Loading');\n}\n\nfunction finishLoading(el)\n{\n    el.html('');\n}\n\n$(document).ready(function(){\n\n    $('.tagcloud').each(function(){\n        var src = $(this).data('src');\n        var el = $(this);\n        startLoading(el);\n        $.getJSON(src, function(data){\n            finishLoading(el);\n            el.jQCloud(data);\n        });\n    });\n\n    var data = {\n        labels : [],\n        series : [[]]\n    };\n\n    var dataPeriod = {\n        labels : [],\n        series : [[]]\n    };\n\n    projects.forEach(function(e, idx){\n        data.labels.push(e.title);\n        data.series[0].push(e.total/60);\n    });\n\n    activities.forEach(function(e, idx){\n        dataPeriod.labels.push(e.starttime);\n        dataPeriod.series[0].push(e.value/60);\n    });\n\n    // Create a new line chart object where as first parameter we pass in a selector\n    // that is resolving to our chart container element. The Second parameter\n    // is the actual data object.\n    new Chartist.Bar('.ct-chart-total', data, {\n        reverseData: true,\n        horizontalBars: true\n    });\n\n    new Chartist.Line('.ct-chart-period', dataPeriod);\n});\n\nnew Vue({\n   el: '#entry',\n    data: {\n        activity: \"\"\n    },\n    computed: {\n      interval: function(){\n          p = findProjects(this.activity);\n          t = findTags(this.activity);\n\n          toParse = this.activity;\n\n          p.forEach(function(el){\n              toParse = toParse.replace(el, \"\");\n          });\n\n          t.forEach(function(el){\n              toParse = toParse.replace(el, \"\");\n          });\n\n      },\n        projects: function(){\n            return findProjects(this.activity).join(\", \");\n        },\n        tags: function(){\n            return findTags(this.activity).join(\", \");\n        },\n        \"class\": function(){\n            var countProjects = findProjects(this.activity).length;\n            return countProjects > 0 ? 'success':'alert';\n        }\n    }\n});"],"sourceRoot":"/source/"}